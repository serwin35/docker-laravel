version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: ./.docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: ${APP_NAME}_nginx
    ports:
      - ${APP_PORT}:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - phpmyadmin
      - mailhog
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    container_name: ${APP_NAME}_mysql
    restart: unless-stopped
    tty: true
    ports:
      - ${SQL_PORT}:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: ${DB_HOST}
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - ${PMA_PORT}:80
    container_name: ${APP_NAME}_phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_PORT: 3306
    depends_on:
      - mysql
    links:
      - mysql
    networks:
      - laravel

  php:
    build:
      context: ./.docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: ${APP_NAME}_php
    volumes:
      - ./src:/var/www/html:delegated
    ports:
      - ${PHP_PORT}:9000
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: ${APP_NAME}_redis
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - laravel

  composer:
    build:
      context: ./.docker
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: ${APP_NAME}_composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  npm:
    image: node:18.11-alpine
    container_name: ${APP_NAME}_npm
    volumes:
      - ./src:/var/www/html
    ports:
      - ${NPM_PORT}:3000
      - ${NPM1_PORT}:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  artisan:
    build:
      context: ./.docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: ${APP_NAME}_artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${APP_NAME}_mailhog
    ports:
      - ${MAILHOG_PORT}:1025
      - ${MAILHOG1_PORT}:8025
    networks:
      - laravel

  cron:
    build:
      context: .
      dockerfile: ./.docker/cron.dockerfile
    container_name: ${APP_NAME}_cron
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  queue:
    image: php
    restart: unless-stopped
    command: bash -c 'php artisan queue:work;'
    container_name: ${APP_NAME}_queue
    depends_on:
        - redis
    volumes:
      - ./src:/var/www/html:delegated
    working_dir: /var/www/html
    networks:
      - laravel
